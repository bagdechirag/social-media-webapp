{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/create.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","TweetCreate","props","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","className","onSubmit","event","preventDefault","newVal","current","value","content","ref","required","type","ActionBtn","tweet","action","didPerformAction","likes","actionDisplay","display","handleActionBackendEvent","onClick","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetsDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","app1","getElementById","ReactDOM","render","StrictMode","createElement","app2","dataset","tweetFeedE1","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aacb0aa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n      var cookieValue = null;\r\n      if (document.cookie && document.cookie !== '') {\r\n          var cookies = document.cookie.split(';');\r\n          for (var i = 0; i < cookies.length; i++) {\r\n              var cookie = cookies[i].trim();\r\n              // Does this cookie string begin with the name we want?\r\n              if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                  cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                  break;\r\n              }\r\n          }\r\n      }\r\n      return cookieValue;\r\n    }\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n      let jsonData;\r\n      if (data){\r\n           jsonData =  JSON.stringify(data);\r\n            // console.log(data)\r\n      }\r\n      const xhr = new XMLHttpRequest()\r\n      const url = `http://localhost:8000/api${endpoint}`\r\n      xhr.responseType = 'json'\r\n      const csrftoken = getCookie('csrftoken');\r\n      xhr.open(method, url)\r\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n      if (csrftoken){\r\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n      }\r\n\r\n      xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n             window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n          \r\n      \r\n      xhr.onerror = function(e) {\r\n          console.log(e)\r\n          callback({\"message\":\"There was an error loading react\"}, 400)\r\n      }\r\n      // console.log(jsonData)\r\n      xhr.send(jsonData)\r\n}\r\n\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback)\r\n{\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action , callback)\r\n{   \r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback){\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/` , callback)\r\n  }\r\n\r\nexport function apiTweetList(username, callback, nextUrl){\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if(nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint , callback)\r\n  \r\n  }\r\n\r\n  export function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","// remember to not updated dev.py\r\n\r\nimport React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  \r\nconst handleBackendUpdate = (response, status) =>{\r\n    // backend api response handler\r\n    // console.log(response,status)\r\n    if (status === 201){\r\n        didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert(\"An error occured please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n  return <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n              <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n              </textarea>\r\n              <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n          </form>\r\n  </div>\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      // console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id,action.type,handleActionBackendEvent)\r\n      \r\n    }\r\n    const display = action.type === 'like' ? `${likes}  ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\n\r\nexport function UserLink (props) {\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profiles/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props){\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\r\n    return <React.Fragment>\r\n        {nameDisplay}\r\n        {props.content}\r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n       </React.Fragment>  \r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props\r\n    return <UserLink username={user.username}>\r\n        <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n            {user.username[0]}\r\n        </span>\r\n    </UserLink>\r\n }","import React, {useState} from 'react'\r\nimport {ActionBtn} from './buttons'\r\nimport {\r\n    UserDisplay,\r\n    UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n\r\n  }\r\n  \r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : 0)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ?  match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n      const handleclick = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n\r\n      const handlePerformAction = (newActionTweet, status) =>{\r\n          if (status === 200){\r\n            setActionTweet(newActionTweet)\r\n          }else if(status === 201){\r\n              if(didRetweet){\r\n                didRetweet(newActionTweet)\r\n              }\r\n          }\r\n      }\r\n      \r\n    return <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'>\r\n    <span className='small text muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n          </div>}\r\n          <div className='d-flex'>\r\n\r\n          <div className=''>\r\n          <UserPicture user={tweet.user} />\r\n          </div>\r\n         <div className='col-10'>\r\n\r\n           <div>\r\n\r\n              <p>\r\n                <UserDisplay includeFullName user={tweet.user} />\r\n              </p>\r\n              <p>{tweet.content}</p>\r\n           </div>\r\n\r\n          <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n           <div className='btn btn-group'>\r\n           { (actionTweet && hideActions !== true) && <React.Fragment>            \r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\",display:\"Likes\"}} />\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\",display:\"Unlike\"}}/>\r\n            <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\",display:\"Retweet\"}}/>\r\n            </React.Fragment>\r\n          }\r\n\r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleclick}>View</button> }\r\n\r\n             </div>\r\n             </div>\r\n      </div>\r\n      </div>\r\n  }","import React, {useEffect, useState}  from 'react'\r\nimport {apiTweetList} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }\r\n","// remember not updated dev.py\r\nimport React, {useEffect,useState} from 'react'\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\n\r\nexport function TweetsComponent(props) {\r\n      const [newTweets, setNewTweets] = useState([])\r\n      const canTweet = props.canTweet === \"false\" ? false : true\r\n      const handleNewTweet = (newTweet) => {\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n      }\r\n\r\n      return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n            <TweetsList newTweets={newTweets} {...props} />\r\n      </div>\r\n}\r\n\r\nexport function FeedComponent(props) {\r\n      const [newTweets, setNewTweets] = useState([])\r\n      const canTweet = props.canTweet === \"false\" ? false : true\r\n      const handleNewTweet = (newTweet) =>{\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n      }\r\n      return <div className={props.className}>\r\n              {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n            <FeedList newTweets={newTweets} {...props} />\r\n      </div>\r\n    }\r\n\r\n\r\nexport function TweetsDetailComponent(props){\r\n      // change name of tweetid to check\r\n      const {tweetId} = props\r\n      const [didLookup, setDidLookup] = useState(false)\r\n      const [tweet, setTweet] = useState(null)\r\n\r\n      const handleBackendLookup = (response, status) => {\r\n            if (status === 200){\r\n                  setTweet(response)\r\n            }else{\r\n                  alert(\"There was an erro finding your tweet.\")\r\n            }\r\n      }\r\n\r\n      useEffect(() =>{\r\n            if(didLookup === false){\r\n                  apiTweetDetail(tweetId, handleBackendLookup)\r\n                  setDidLookup(true)\r\n            }\r\n      },[tweetId, didLookup, setDidLookup])\r\n      \r\n      return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent,TweetsComponent,TweetsDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst app1 = document.getElementById('root')\nif (app1){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    app1\n  );\n}\n\nconst e = React.createElement\nconst app2 = document.getElementById('tweetme')\nif (app2){\n  // console.log(app2.dataset);\n\n  ReactDOM.render(e(TweetsComponent, app2.dataset),app2);\n}\n\nconst tweetFeedE1 = document.getElementById('tweetme-feed')\nif (tweetFeedE1){\n  // console.log(app2.dataset);\n\n  ReactDOM.render(e(FeedComponent, tweetFeedE1.dataset),tweetFeedE1);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\")\n\ntweetDetailElements.forEach(container=> {\n  ReactDOM.render(\n    e(TweetsDetailComponent, container.dataset),\n    container);\n  })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}